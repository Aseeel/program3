/////////////////////////////////////////////////////////////////////////////
// Semester:         CS367 Spring 2017
// PROJECT:          p3
// FILE:             FileLinePriorityQueue.java
//
// Author1: Aseel Albeshri, albeshri@wisc.edu, albeshri, lecture 002
// Author2: Jessica Fernandes, jfernandes2@wisc.edu, jfernandes2, lecture 002
//
/////////////////////////////////////////////////////////////////////////////
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Comparator;

/**
 * An implementation of the MinPriorityQueueADT interface. This implementation stores FileLine objects.
 * See MinPriorityQueueADT.java for a description of each method. 
 *
 */
public class FileLinePriorityQueue implements MinPriorityQueueADT<FileLine> {
    // TODO
    private Comparator<FileLine> cmp;
    private int maxSize;
    private FileLine[] queue;

    public FileLinePriorityQueue(int initialSize, Comparator<FileLine> cmp) {
		this.cmp = cmp;
		maxSize = initialSize;
		
		// TODO
		queue = new FileLine[maxSize];
    }

    public FileLine removeMin() throws PriorityQueueEmptyException {
    	// TODO
    	FileLine fl = queue[0];
    	if(fl==null)throw new PriorityQueueEmptyException();
    	queue[0]=null;
    	Arrays.sort(queue, cmp);
    	return fl;
    }

    public void insert(FileLine fl) throws PriorityQueueFullException {
		// TODO
    	for (int i=0;i<maxSize; i++){
    		if (queue[i]==null){
    			queue[i]=fl;
    			Arrays.sort(queue, cmp);
    			return;
    		}
    	}
    	throw new PriorityQueueFullException();
    }

    public boolean isEmpty() {
		// TODO
    	for (int i=0;i<maxSize; i++){
    		if (queue[i]!=null){
    			return false;
    		}
    	}
    	return true;
    }
}
